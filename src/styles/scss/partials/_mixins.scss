/***Media Query Mixin***/

@mixin mq($breakpoint) {
	@if map-has-key($breakpoints, $breakpoint) {
		@media (min-width: #{map-get($breakpoints, $breakpoint)}) {
			@content;
		}
	}
	@else {
		@warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "+"Please make sure it is defined in `$breakpoints` map.";
	}
}



/***Flex Box Mixins***/

@mixin flex-row-n($justify-content: center, $align-items: center ) {
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	justify-content: $justify-content;
	align-items:$align-items;

}

@mixin flex-row-w($justify-content: center, $align-items: center) {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	justify-content: $justify-content;
	align-items: $align-items;

}

@mixin flex-col($flex-wrap: nowrap, $justify-content: center, $align-items: center) {
	display: flex;
	flex-direction: column;
	flex-wrap: $flex-wrap;
	align-items: $align-items;
	justify-content: $justify-content;
}

/**Wave Gradient**/

@mixin wave($stop1, $stop2, $stop3, $stopSize: 50px, $sizeX:100px, $sizeY:220px) {
	background: linear-gradient($stop1 50%, rgba($stop2, 0) 0) 0 0,
	radial-gradient(circle closest-side, $stop1 52.5%, rgba($stop2, 0) 0) 0 0,
	radial-gradient(circle closest-side, $stop1 50%, rgba($stop2, 0) 0) $stopSize 0 $stop3;
	background-size: $sizeX $sizeY;
	background-repeat: repeat-x;
}


/**Dots Gradient**/

@mixin dots($stop, $bg) {
	background: radial-gradient($stop 15%, transparent 16%) 0 0,
	radial-gradient($stop 15%, transparent 16%) 8px 8px,
	radial-gradient(rgba($stop, .1) 15%, transparent 20%) 0 1px,
	radial-gradient(rgba($stop, .1) 15%, transparent 20%) 8px 9px;
	background-color: $bg;
	background-size: 16px 16px;
}

/**Lines Gradient**/

@mixin Lines( $stop1: $primary_L, $stop2: $primary, $bgSize: 100% 10px, $bgPos: bottom) {
	& {
		position: relative;

		&::after {
			content: '';
			position: absolute;
			bottom: -10px;
			left: 0;
			width: 100%;
			height: 20px;
			background-image: repeating-linear-gradient(0deg,$stop1 0%, $stop1 5%, transparent 5%, transparent 50%, $stop2 50%, $stop2 55%, transparent 55%, transparent 95%, $stop1 95%, $stop1 100% );
			background-size: $bgSize;
			background-position: $bgPos;
		}
	}
}

/**Button Hover Effect**/

@mixin btnHoverEffect( $stop1, $stop2, $spanBG, $icon) {

		a {
				background-image: linear-gradient(90deg, rgba($stop1, .8) 0%, rgba($stop1,.8) 50%, rgba($stop2,.9) 50%, rgba($stop2,.9) 100% );
				border-radius: 40px;
				font-family: $fontTitle;
				font-weight: 500;
				font-size: 1.2rem;
				height: 49px;
				padding: 0;
				text-transform: uppercase;
				line-height: 49px;
				position: relative;
				overflow: hidden;
				text-align: center;
				transition: all .8s cubic-bezier(.04, .47, .64, .96) .5s;
				
				span {
					color:$primary;
					display: block;
					background-color: $spanBG;
					clip-path: circle(50% at 50% 50%);
					transform: scale(1);
					transition: all .8s cubic-bezier(.04, .47, .64, .96);
					opacity: 1;
					
				}


				&::after {
					content: " ";
					display: block;
					position: absolute;
					top: 0;
					left: 0;
					width: 100%;
					height: 100%;
					background-image: url($icon);
					background-repeat: no-repeat;
					background-position: center center;
					background-size: 35px;
					background-color: $spanBG;
					clip-path: circle(50% at 50% 50%);
					transform: scale(1.5);
					transition: all .8s cubic-bezier(.04, .47, .64, .96);
					opacity: 0;
				}			
				

				&:hover {
					
					span {
						transform: scale(1.5);
						opacity: 0;

					}

					&::after {

						transform: scale(1);
						opacity: 1;
					}


				}

			}


	}



/**Button Hover Sonar Effect**/

@mixin btnSonarEffect($className, $icon, $bg, $bghover) {
	.#{$className} {
		background-color: $bg;
		border-color: $bg;
		position: relative;
		transition: all .6s cubic-bezier(.04, .47, .64, .96);
		z-index: 1;

		span {
			display: block;
			transform: scale(1);
			transition: transform .6s cubic-bezier(.04, .47, .64, .96);
		}

		&::before,
		&::after {
				content: " ";
				display: block;
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				
		}

		&::before {
			background-image: url($icon);
			background-repeat: no-repeat;
			background-position: center center;
			background-size: 35px;
			transform: scale(0);
			transition: all .5s cubic-bezier(.04, .47, .64, .96);
			opacity: 0;
			z-index: -1;
		}

		&::after {
			box-shadow: 0 0 0 2px rgba($bg, .3);
			border-radius: 20px;
			pointer-events: none;
			padding: 0;
			opacity: 0;
			transform: scale(.7);
		}

			&:hover {
				background-color: darken($bghover,5);
				border-color: rgba($bghover,.1);

				span {
					transform: scale3d(0, 0, 0);
					opacity: 0;
				}

				&::before {
					transform: scale(1);
					opacity: 1;
				}

				&::after {
					animation: sonarEffect 1.3s cubic-bezier(.04, .47, .64, .96) .4s;
				}
			}
	}

	@keyframes sonarEffect {
		0% {
			opacity: 0.3;
		}
		40% {
			opacity: 0.5;
			box-shadow: 0 0 0 2px rgba($bghover, .5), 0 0 10px 10px $bghover, 0 0 0 10px rgba($bghover, .8);
		}
		100% {
			box-shadow: 0 0 0 2px rgba($bghover, .5), 0 0 10px 10px $bghover, 0 0 0 10px rgba($bghover, .8);
			transform: scale(1.3);
			opacity: 0;
		}
	}

}

/**Image Load Effect**/
@mixin imageLoad($bgSize: 50px, $color: $primary, $font: $fontSize * .8) {
	position: relative;

		&::before {
		content: "Loading...";
		position: absolute;
		top:0;
		left: 0;
		width: 100%;
		height: 100%;
		background-image: url('../../images/salad.svg');
		background-repeat: no-repeat;
		background-size: $bgSize;
		background-position: 50% 50%;
		color: $color;
		text-align: center;
		font-size: $font;
		letter-spacing: 1px;
		padding-top: 20%;
		z-index: -1;
	}
}